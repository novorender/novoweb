import { useCallback, useEffect } from "react";
import { vec3, quat } from "gl-matrix";
import { ObjectData } from "@novorender/webgl-api";
import { Box, Button, FormControlLabel, List, ListItemButton } from "@mui/material";
import {
    FirstPage,
    LastPage,
    ChevronLeft,
    ChevronRight,
    KeyboardDoubleArrowLeft,
    KeyboardDoubleArrowRight,
} from "@mui/icons-material";

import { featuresConfig } from "config/features";
import { useAppDispatch, useAppSelector } from "app/store";
import { renderActions, selectMainObject } from "slices/renderSlice";
import { useExplorerGlobals } from "contexts/explorerGlobals";

import { IosSwitch, LogoSpeedDial, ScrollBox, WidgetContainer, WidgetHeader } from "components";
import { WidgetList } from "features/widgetList";

import { useAbortController } from "hooks/useAbortController";
import { useMountedState } from "hooks/useMountedState";
import { useToggle } from "hooks/useToggle";
import { getObjectData, searchByPatterns } from "utils/search";
import { highlightActions, useDispatchHighlighted } from "contexts/highlighted";

export function FollowPath() {
    const [menuOpen, toggleMenu] = useToggle();

    const {
        state: { view, scene, canvas },
    } = useExplorerGlobals(true);

    const mainObject = useAppSelector(selectMainObject);
    const [abortController, abort] = useAbortController();
    const [controlPoints, setControlPoints] = useMountedState<vec3[]>([]);
    const [activePoint, setActivePoint] = useMountedState<number>(0);
    const [currentObject, setCurrentObject] = useMountedState<number | undefined>(undefined);
    const dispatchHighlighted = useDispatchHighlighted();
    const dispatch = useAppDispatch();

    const [paths, setPaths] = useMountedState(undefined as undefined | ObjectData[]);

    useEffect(() => {
        if (!paths) {
            getPaths();
        }

        async function getPaths() {
            const path = await getObjectData({ scene, id: 88 });

            if (path) {
                setPaths([path]);
            } else {
                setPaths([]);
            }
        }
    }, [scene, paths, setPaths]);

    useEffect(() => {
        if (currentObject !== undefined) {
            abort();
            const url = new URL((scene as any).assetUrl);
            url.pathname += `brep/${currentObject}.json`;
            const load = async () => {
                try {
                    const resp = await fetch(url.toString());
                    const points = (await resp.json()).curves3D
                        ?.filter((c: any) => c.kind === "nurbs")
                        .map((_: any) => _.controlPoints as vec3[])
                        .flat()
                        .map((p: vec3) => vec3.fromValues(p[0], p[2], -p[1]))
                        .filter((v: vec3, i: number, arr: vec3[]) => i < 1 || vec3.dist(v, arr[i - 1]) > 1);
                    if (points) {
                        setControlPoints(points);
                        setActivePoint(0);
                    }
                } catch {
                    setCurrentObject(undefined);
                }
            };
            load();
        }
    }, [scene, currentObject, setCurrentObject, setControlPoints, setActivePoint, abort, abortController]);

    useEffect(() => {
        if (controlPoints.length < 2 || !canvas) {
            return;
        }
        const dir = vec3.sub(
            vec3.create(),
            controlPoints[Math.min(controlPoints.length - 1, activePoint + 1)],
            controlPoints[Math.max(0, activePoint - 1)]
        );
        vec3.normalize(dir, dir);
        if (view.camera.controller.params.kind === "ortho") {
            (view.camera.controller as any).init(controlPoints[activePoint], dir, view.camera);
        } else {
            const up = vec3.fromValues(0, 1, 0);
            const right = vec3.cross(vec3.create(), up, dir);
            vec3.normalize(right, right);
            vec3.cross(up, dir, right);
            vec3.normalize(up, up);
            const rot = quat.setAxes(quat.create(), dir, up, right);
            view.camera.controller.moveTo(controlPoints[activePoint], rot);
        }
    }, [activePoint, controlPoints, view, canvas, dispatch]);

    const toFirst = useCallback(() => {
        setActivePoint(0);
    }, [setActivePoint]);

    const toPrev = useCallback(() => {
        setActivePoint(activePoint - 1);
    }, [setActivePoint, activePoint]);

    const toNext = useCallback(() => {
        setActivePoint(activePoint + 1);
    }, [setActivePoint, activePoint]);

    const to10Prev = useCallback(() => {
        setActivePoint(Math.max(0, activePoint - 10));
    }, [setActivePoint, activePoint]);

    const to10Next = useCallback(() => {
        setActivePoint(Math.min(controlPoints.length - 1, activePoint + 10));
    }, [setActivePoint, activePoint, controlPoints]);

    const toLast = useCallback(() => {
        setActivePoint(controlPoints.length - 1);
    }, [setActivePoint, controlPoints]);

    const handlePathClick = (path: ObjectData) => {
        setCurrentObject(path.id);
        dispatch(renderActions.setMainObject(path.id));
        dispatchHighlighted(highlightActions.setIds([path.id]));
    };

    return (
        <>
            <WidgetContainer tabIndex={0}>
                <WidgetHeader widget={featuresConfig.followPath}>
                    {!menuOpen ? (
                        <Box display="flex" justifyContent="space-between">
                            <Button
                                onClick={toFirst}
                                color="grey"
                                disabled={controlPoints.length < 1 || activePoint < 1}
                            >
                                <FirstPage />
                            </Button>
                            <Button
                                onClick={to10Prev}
                                color="grey"
                                disabled={controlPoints.length < 1 || activePoint < 1}
                            >
                                <KeyboardDoubleArrowLeft />
                            </Button>
                            <Button
                                onClick={toPrev}
                                color="grey"
                                disabled={controlPoints.length < 1 || activePoint < 1}
                            >
                                <ChevronLeft />
                            </Button>
                            <Button disabled={true} sx={{ fontWeight: "bold" }}>
                                {controlPoints.length > 0 ? `${activePoint + 1}/${controlPoints.length}` : "0"}
                            </Button>
                            <Button onClick={toNext} color="grey" disabled={activePoint > controlPoints.length - 2}>
                                <ChevronRight />
                            </Button>
                            <Button onClick={to10Next} color="grey" disabled={activePoint > controlPoints.length - 2}>
                                <KeyboardDoubleArrowRight />
                            </Button>
                            <Button onClick={toLast} color="grey" disabled={activePoint > controlPoints.length - 2}>
                                <LastPage />
                            </Button>
                        </Box>
                    ) : null}
                </WidgetHeader>
                <ScrollBox display={menuOpen ? "none" : "block"}>
                    <List>
                        {paths?.map((path) => (
                            <ListItemButton
                                key={path.id}
                                onClick={() => handlePathClick(path)}
                                disableGutters
                                sx={{ px: 1, py: 0.5 }}
                            >
                                {path.name}
                            </ListItemButton>
                        ))}
                    </List>
                </ScrollBox>
                <WidgetList
                    display={menuOpen ? "block" : "none"}
                    widgetKey={featuresConfig.followPath.key}
                    onSelect={toggleMenu}
                />
            </WidgetContainer>
            <LogoSpeedDial
                open={menuOpen}
                toggle={toggleMenu}
                testId={`${featuresConfig.followPath.key}-widget-menu-fab`}
            />
        </>
    );
}

// eslint-disable-next-line
const obj = {
    id: 88,
    name: "Gramunk as built",
    path: "LNS - Gramunk_sprengningsmodell/LNS - Gramunk_sprengningsmodell/Gramunk as built",
    bounds: {
        sphere: { center: [94169.125, 71.70821238850891, -1151175.5260741527], radius: 529.7739975904091 },
        box: {
            min: [94119.5078125, 68.82302103821384, -1151702.9635575556],
            max: [94218.7421875, 74.59340373880397, -1150648.0885907498],
        },
    },
    properties: [],
    type: 1,
};

// H = alltid Z
// Nurb.ControlPoints[idx][2]
// Line.origin[2]
//      Ka om linjen ikkje gÃ¥r 100% vannrett? Sjekk med siggen

// P
// Nurbs -> Nurb.knots[indexOf controlPoint]
// Line -> curveSegments[indexOf line].parameteBounds -> et nummer mellom bounds[0] og bounds[1]

// ORDER
// geometries.compoundCurve -> curveSegment index[]
// curveSegment[idx].curve3D -> curves3D index

// eslint-disable-next-line
const path = {
    units: "m",
    vertices: [
        [94119.507, 1151703.027, 68.78657926682108],
        [94176.013361, 1151023.801396, 71.22903546901969],
    ],
    instances: [
        {
            geometries: 0,
        },
    ],
    geometries: [
        {
            compoundCurve: [0, 1, 2],
        },
    ],
    curveSegments: [
        {
            parameterBounds: [0.0, 681.5763754378346],
            curve3D: 0,
        },
        {
            parameterBounds: [101181.751999, 158.607],
            curve3D: 2,
        },
        {
            parameterBounds: [101340.358999, 101560.00421920294],
            curve3D: 3,
        },
    ],
    curves3D: [
        {
            kind: "line",
            origin: [94119.507, 1151703.027, 68.78657926682108],
            direction: [0.08290539847967612, -0.9965509786980383, 0.0035835399967166053],
        },
        {
            kind: "nurbs",
            order: 2,
            knots: [
                101181.751999, 0.0, 9.9129375, 19.825875, 24.782343750000003, 29.7388125, 34.69528125, 39.65175,
                44.608218750000006, 49.564687500000005, 52.042921875000005, 54.521156250000004, 56.999390625000004,
                59.477625, 61.955859375, 64.43409375, 66.912328125, 69.3905625, 71.868796875, 74.34703125, 76.825265625,
                79.3035, 81.78173437500001, 84.25996875000001, 86.73820312500001, 89.21643750000001, 91.69467187500001,
                94.17290625000001, 96.65114062500001, 99.12937500000001, 101.60760937500001, 104.08584375000001,
                106.56407812500001, 109.04231250000001, 111.52054687500001, 113.99878125000001, 116.477015625,
                118.95525, 121.433484375, 123.91171875, 126.389953125, 128.8681875, 131.346421875, 133.82465625,
                136.302890625, 138.781125, 141.259359375, 143.73759375, 146.215828125, 148.6940625, 151.172296875,
                153.65053125, 156.128765625, 158.607, 0.0, 1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0, 9.0, 10.0, 11.0,
                12.0, 13.0, 14.0, 15.0, 16.0, 17.0, 18.0, 19.0, 20.0, 21.0, 22.0, 23.0, 24.0, 25.0, 26.0, 27.0, 28.0,
                29.0, 30.0, 31.0, 32.0, 33.0, 34.0, 35.0, 36.0, 37.0, 38.0, 39.0, 40.0, 41.0, 42.0, 43.0, 44.0, 45.0,
                46.0, 47.0, 48.0, 49.0, 50.0, 51.0, 52.0,
            ],
            controlPoints: [
                [94176.013361, 1151023.801396, 71.22903546830278],
                [94176.83545541635, 1151013.922606064, 71.29784298812392],
                [94177.65908084264, 1151004.0439436755, 71.36764138517836],
                [94178.07194611052, 1150999.1047003448, 71.40291216266822],
                [94178.48576822941, 1150994.1655370928, 71.43843065946632],
                [94178.90073854904, 1150989.2264701796, 71.47419687557277],
                [94179.31704840784, 1150984.2875159988, 71.51021081098767],
                [94179.73488913105, 1150979.3486911005, 71.54647246571083],
                [94180.1544520287, 1150974.4100122117, 71.58298183974233],
                [94180.36493907271, 1150971.9407328023, 71.60132942149883],
                [94180.57592839368, 1150969.47149626, 71.61973893308232],
                [94180.78744390023, 1150967.0023047356, 71.63821037449287],
                [94180.99950949963, 1150964.5331603955, 71.65674374573052],
                [94181.2121490977, 1150962.0640654217, 71.67533904679526],
                [94181.42538659884, 1150959.595022013, 71.69399627768709],
                [94181.63924590593, 1150957.1260323855, 71.71271543840611],
                [94181.8537509202, 1150954.6570987736, 71.7314965289521],
                [94182.06892554124, 1150952.1882234302, 71.75033954932519],
                [94182.28479366691, 1150949.7194086278, 71.76924449952537],
                [94182.50137919321, 1150947.2506566592, 71.78821137955264],
                [94182.71870601429, 1150944.7819698378, 71.807240189407],
                [94182.93679802233, 1150942.3133504984, 71.82633092908854],
                [94183.1556791075, 1150939.8448009985, 71.84548359859707],
                [94183.37537315779, 1150937.3763237179, 71.86469819793268],
                [94183.59590405907, 1150934.9079210607, 71.88397472709539],
                [94183.81729569494, 1150932.4395954546, 71.9033131860852],
                [94184.0395719466, 1150929.9713493532, 71.92271357490208],
                [94184.26275669291, 1150927.5031852347, 71.94217589354615],
                [94184.48687381016, 1150925.0351056047, 71.96170014201721],
                [94184.71194717207, 1150922.567112995, 71.98128632031535],
                [94184.93800064968, 1150920.0992099664, 72.00093442844059],
                [94185.1650581113, 1150917.6313991065, 72.0206444663929],
                [94185.39314342238, 1150915.1636830333, 72.04041643417231],
                [94185.62228044542, 1150912.6960643944, 72.06025033177893],
                [94185.8524930399, 1150910.2285458678, 72.0801461592125],
                [94186.08380506221, 1150907.7611301627, 72.10010391647317],
                [94186.31624036554, 1150905.2938200203, 72.12012360356093],
                [94186.54982279975, 1150902.8266182144, 72.14020522047578],
                [94186.78457621128, 1150900.3595275523, 72.16034876721773],
                [94187.02052444317, 1150897.8925508747, 72.18055424378686],
                [94187.25769133477, 1150895.425691058, 72.20082165018297],
                [94187.49610072178, 1150892.9589510132, 72.22115098640617],
                [94187.73577643611, 1150890.4923336874, 72.24154225245645],
                [94187.97674230573, 1150888.0258420648, 72.26199544833383],
                [94188.21902215468, 1150885.5594791668, 72.2825105740383],
                [94188.46263980279, 1150883.0932480532, 72.30308762956997],
                [94188.70761906575, 1150880.6271518224, 72.3237266149286],
                [94188.95398375487, 1150878.1611936125, 72.34442753011433],
                [94189.20175767702, 1150875.6953766015, 72.36519037512716],
                [94189.45096463451, 1150873.229704009, 72.38601514996705],
                [94189.70162842497, 1150870.7641790954, 72.40690185463404],
                [94189.95377284124, 1150868.2988051637, 72.42785048912825],
                [94190.207455, 1150865.833589, 72.4488610534494],
            ],
        },
        {
            kind: "nurbs",
            order: 2,
            knots: [
                101340.358999, 101340.358999, 101342.07497728277, 101343.79095556567, 101345.50693384848,
                101347.22291213136, 101348.9388904142, 101350.65486869711, 101352.37084697997, 101354.08682526265,
                101355.80280354545, 101357.51878182842, 101359.23476011115, 101360.95073839415, 101362.66671667696,
                101364.38269495982, 101366.09867324246, 101367.81465152536, 101369.53062980823, 101371.246608091,
                101372.96258637383, 101374.67856465667, 101376.39454293963, 101378.11052122235, 101379.82649950517,
                101381.54247778819, 101383.25845607101, 101384.97443435369, 101386.69041263672, 101388.40639091944,
                101390.12236920232, 101391.83834748511, 101393.55432576805, 101395.27030405085, 101396.98628233369,
                101398.70226061651, 101400.41823889922, 101402.13421718219, 101403.85019546506, 101405.5661737477,
                101407.28215203068, 101408.99813031334, 101410.71410859622, 101412.43008687912, 101414.14606516204,
                101415.86204344478, 101417.57802172753, 101419.29400001052, 101421.00997829321, 101422.72595657602,
                101424.44193485887, 101426.1579131419, 101427.87389142475, 101429.58986970753, 101431.30584799033,
                101433.02182627322, 101434.73780455602, 101436.45378283875, 101438.16976112168, 101439.88573940456,
                101441.60171768739, 101443.31769597012, 101445.03367425295, 101446.7496525358, 101448.4656308186,
                101450.18160910145, 101451.89758738424, 101453.61356566708, 101455.32954395004, 101457.0455222327,
                101458.76150051558, 101460.47747879846, 101462.19345708136, 101463.90943536424, 101465.6254136471,
                101467.34139192986, 101469.05737021271, 101470.77334849557, 101472.48932677832, 101474.20530506107,
                101475.92128334392, 101477.63726162694, 101479.35323990972, 101481.06921819253, 101482.78519647538,
                101484.50117475829, 101486.217153041, 101487.93313132392, 101489.64910960679, 101491.36508788951,
                101493.08106617245, 101494.79704445529, 101496.51302273812, 101498.22900102077, 101499.94497930378,
                101501.66095758649, 101503.37693586938, 101505.09291415225, 101506.80889243506, 101508.5248707178,
                101510.24084900062, 101511.95682728346, 101513.67280556646, 101515.38878384927, 101517.10476213197,
                101518.8207404149, 101520.53671869765, 101522.25269698049, 101523.96867526343, 101525.68465354625,
                101527.40063182916, 101529.11661011189, 101530.83258839483, 101532.54856667768, 101534.26454496033,
                101535.98052324312, 101537.69650152617, 101539.41247980882, 101541.12845809181, 101542.84443637451,
                101544.56041465736, 101546.27639294014, 101547.99237122304, 101549.70834950599, 101551.4243277887,
                101553.14030607154, 101554.85628435438, 101556.57226263732, 101558.28824091997, 101560.00421920294,
            ],
            controlPoints: [
                [94190.207455, 1150865.833589, 72.4488610534494],
                [94190.38397964019, 1150864.1267145118, 72.4634454686163],
                [94190.56123676016, 1150862.4199159353, 72.47805957573209],
                [94190.73922650136, 1150860.713193603, 72.49270337479496],
                [94190.91794883105, 1150859.0065478296, 72.50737686580624],
                [94191.09740371624, 1150857.2999789293, 72.52208004876496],
                [94191.27759112392, 1150855.5934872166, 72.5368129236721],
                [94191.45851102084, 1150853.887073006, 72.55157549052669],
                [94191.6401633737, 1150852.180736612, 72.56636774932744],
                [94191.82254814901, 1150850.4744783489, 72.581189700077],
                [94192.00566531319, 1150848.7682985307, 72.59604134277586],
                [94192.18951483247, 1150847.0621974724, 72.61092267742055],
                [94192.374096673, 1150845.3561754879, 72.62583370401526],
                [94192.55941080075, 1150843.6502328918, 72.64077442255618],
                [94192.74545718159, 1150841.9443699983, 72.65574483304528],
                [94192.93223578123, 1150840.238587122, 72.67074493548039],
                [94193.11974656527, 1150838.5328845766, 72.68577472986546],
                [94193.30798949915, 1150836.8272626768, 72.70083421619809],
                [94193.49696454818, 1150835.1217217369, 72.71592339447763],
                [94193.68667167755, 1150833.4162620709, 72.73104226470562],
                [94193.8771108523, 1150831.7108839932, 72.7461908268814],
                [94194.06828203736, 1150830.0055878179, 72.76136908100602],
                [94194.26018519749, 1150828.3003738595, 72.7765770270764],
                [94194.45282029732, 1150826.5952424319, 72.79181466509546],
                [94194.64618730138, 1150824.890193849, 72.80708199506404],
                [94194.84028617402, 1150823.1852284258, 72.82237901697872],
                [94195.03511687949, 1150821.480346476, 72.8377057308399],
                [94195.2306793819, 1150819.7755483133, 72.85306213665203],
                [94195.4269736452, 1150818.0708342525, 72.8684482344092],
                [94195.62399963323, 1150816.3662046073, 72.88386402411564],
                [94195.82175730968, 1150814.661659692, 72.89930950576907],
                [94196.02024663812, 1150812.9571998203, 72.91478467937164],
                [94196.21946758198, 1150811.2528253067, 72.9302895449207],
                [94196.41942010455, 1150809.548536465, 72.94582410241794],
                [94196.62010416898, 1150807.8443336093, 72.96138835186288],
                [94196.82151973831, 1150806.1402170537, 72.97698229325454],
                [94197.02366677542, 1150804.4361871118, 72.9926059265964],
                [94197.22654524306, 1150802.7322440979, 73.00825925188514],
                [94197.43015510385, 1150801.028388326, 73.02394226911969],
                [94197.63449632029, 1150799.3246201097, 73.03965497830497],
                [94197.8395688547, 1150797.6209397635, 73.05539737943525],
                [94198.04537266932, 1150795.9173476007, 73.07116947251535],
                [94198.25190772623, 1150794.2138439354, 73.08697125754337],
                [94198.45917398736, 1150792.5104290815, 73.10280273451947],
                [94198.66717141452, 1150790.807103353, 73.11866390344164],
                [94198.8758999694, 1150789.1038670638, 73.13455476431173],
                [94199.08535961354, 1150787.4007205272, 73.1504753171318],
                [94199.29555030834, 1150785.6976640576, 73.16642556189697],
                [94199.50647201505, 1150783.9946979685, 73.18240549861102],
                [94199.71812469486, 1150782.2918225736, 73.19841512727328],
                [94199.93050830872, 1150780.5890381867, 73.21445444788498],
                [94200.14362281754, 1150778.8863451218, 73.23052346044287],
                [94200.35746818203, 1150777.1837436925, 73.24662216494787],
                [94200.57204436278, 1150775.4812342124, 73.2627505614008],
                [94200.78735132028, 1150773.7788169952, 73.27890864980249],
                [94201.00338901483, 1150772.0764923547, 73.29509643015103],
                [94201.22015740666, 1150770.3742606046, 73.31131390244684],
                [94201.43765645579, 1150768.6721220582, 73.32756106669223],
                [94201.65588612217, 1150766.9700770294, 73.34383792288502],
                [94201.87484636558, 1150765.2681258318, 73.36014447102505],
                [94202.09453714569, 1150763.566268779, 73.37648071111207],
                [94202.31495842201, 1150761.8645061846, 73.39284664314772],
                [94202.53611015392, 1150760.162838362, 73.40924226713145],
                [94202.75799230069, 1150758.4612656247, 73.42566758306242],
                [94202.98060482142, 1150756.7597882864, 73.44212259094175],
                [94203.20394767511, 1150755.0584066606, 73.45860729076834],
                [94203.4280208206, 1150753.3571210606, 73.47512168254315],
                [94203.6528242166, 1150751.6559318, 73.49166576626688],
                [94203.8783578217, 1150749.9548391923, 73.50823954193562],
                [94204.10462159434, 1150748.2538435508, 73.52484300955426],
                [94204.33161549282, 1150746.552945189, 73.54147616912071],
                [94204.55933947532, 1150744.8521444201, 73.55813902063511],
                [94204.7877934999, 1150743.1514415578, 73.57483156409717],
                [94205.01697752444, 1150741.4508369153, 73.59155379950676],
                [94205.24689150673, 1150739.750330806, 73.60830572686329],
                [94205.4775354044, 1150738.0499235431, 73.6250873461685],
                [94205.70890917497, 1150736.34961544, 73.64189865742149],
                [94205.94101277577, 1150734.64940681, 73.6587396606213],
                [94206.17384616408, 1150732.9492979664, 73.67561035576891],
                [94206.40740929697, 1150731.2492892223, 73.69251074286531],
                [94206.64170213141, 1150729.5493808908, 73.70944082191112],
                [94206.87672462424, 1150727.8495732856, 73.72640059290242],
                [94207.11247673215, 1150726.1498667195, 73.74339005584183],
                [94207.34895841169, 1150724.4502615058, 73.76040921072946],
                [94207.58616961932, 1150722.7507579576, 73.77745805756547],
                [94207.82411031131, 1150721.0513563883, 73.79453659634727],
                [94208.06278044381, 1150719.3520571105, 73.81164482707905],
                [94208.30217997287, 1150717.6528604378, 73.82878274975805],
                [94208.54230885438, 1150715.9537666831, 73.8459503643834],
                [94208.78316704405, 1150714.2547761593, 73.86314767095874],
                [94209.02475449756, 1150712.5558891797, 73.88037466948087],
                [94209.26707117035, 1150710.8571060572, 73.89763135995065],
                [94209.51011701781, 1150709.158427105, 73.91491774236648],
                [94209.75389199515, 1150707.4598526356, 73.93223381673377],
                [94209.99839605743, 1150705.7613829626, 73.9495795830458],
                [94210.24362915961, 1150704.0630183984, 73.96695504130753],
                [94210.48959125653, 1150702.3647592561, 73.98436019151679],
                [94210.73628230282, 1150700.6666058488, 74.00179503367323],
                [94210.98370225308, 1150698.9685584893, 74.01925956777677],
                [94211.2318510617, 1150697.2706174904, 74.03675379382898],
                [94211.48072868295, 1150695.572783165, 74.05427771182916],
                [94211.73033507098, 1150693.8750558256, 74.07183132177876],
                [94211.98067017981, 1150692.1774357855, 74.08941462367424],
                [94212.2317339633, 1150690.4799233575, 74.1070276175165],
                [94212.48352637519, 1150688.782518854, 74.12467030330878],
                [94212.7360473691, 1150687.085222588, 74.14234268104708],
                [94212.9892968985, 1150685.388034872, 74.16004475073407],
                [94213.2432749167, 1150683.6909560189, 74.17777651236995],
                [94213.49798137696, 1150681.9939863414, 74.1955379659524],
                [94213.7534162323, 1150680.297126152, 74.21332911148357],
                [94214.00957943566, 1150678.6003757638, 74.23114994896056],
                [94214.26647093987, 1150676.903735489, 74.24900047838766],
                [94214.52409069758, 1150675.2072056402, 74.26688069976164],
                [94214.78243866132, 1150673.5107865303, 74.2847906130813],
                [94215.04151478349, 1150671.8144784716, 74.30273021835028],
                [94215.30131901636, 1150670.1182817766, 74.32069951556966],
                [94215.56185131206, 1150668.4221967582, 74.33869850473272],
                [94215.82311162257, 1150666.7262237284, 74.35672718584726],
                [94216.08509989978, 1150665.0303630002, 74.37478555890638],
                [94216.3478160954, 1150663.3346148857, 74.392873623915],
                [94216.61126016102, 1150661.6389796976, 74.41099138087064],
                [94216.87543204811, 1150659.943457748, 74.42913882977533],
                [94217.140331708, 1150658.2480493495, 74.44731597062844],
                [94217.40595909186, 1150656.5527548147, 74.46552280342674],
                [94217.67231415077, 1150654.8575744557, 74.48375932817422],
                [94217.93939683563, 1150653.1625085848, 74.50202554486951],
                [94218.20720709726, 1150651.4675575143, 74.52032145351369],
                [94218.4757448863, 1150649.772721557, 74.53864705410257],
                [94218.74501, 1150648.078001, 74.557],
            ],
        },
    ],
};
